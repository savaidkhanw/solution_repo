#!/bin/bash

# Script to analyze basic server performance stats

# Function to get total CPU usage
total_cpu_usage() {
  echo "Total CPU Usage:"
  mpstat | grep -A 5 "%idle" | awk '$12 ~ /[0-9.]+/ {print 100 - $12 "%"}'
}

# Function to get total memory usage
total_memory_usage() {
  echo "Total Memory Usage:"
  free -m | awk 'NR==2{printf "Used: %sMB (%.2f%%), Free: %sMB (%.2f%%)\n", $3, $3*100/$2, $4, $4*100/$2 }'
}

# Function to get total disk usage
total_disk_usage() {
  echo "Total Disk Usage:"
  df -h --total | awk '$1 == "total" {printf "Used: %s (%s), Free: %s\n", $3, $5, $4}'
}

# Function to get top 5 processes by CPU usage
top_processes_cpu() {
  echo "Top 5 Processes by CPU Usage:"
  ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -n 6
}

# Function to get top 5 processes by memory usage
top_processes_memory() {
  echo "Top 5 Processes by Memory Usage:"
  ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head -n 6
}

# Optional stretch goals
os_version() {
  echo "Operating System Version:"
  lsb_release -a 2>/dev/null || cat /etc/os-release
}

uptime_info() {
  echo "Uptime and Load Average:"
  uptime
}

logged_in_users() {
  echo "Logged-in Users:"
  who
}

failed_logins() {
  echo "Failed Login Attempts:"
  grep "Failed password" /var/log/auth.log 2>/dev/null | wc -l || echo "Log data not available."
}

# Main script
clear

echo "----- Server Performance Stats -----"
echo

total_cpu_usage
echo

total_memory_usage
echo

total_disk_usage
echo

top_processes_cpu
echo

top_processes_memory
echo

# Optional stats
echo "----- Additional Server Information -----"
echo
os_version
echo

uptime_info
echo

logged_in_users
echo

failed_logins
echo
